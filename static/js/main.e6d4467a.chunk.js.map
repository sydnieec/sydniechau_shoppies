{"version":3,"sources":["movies.jsx","nominations.jsx","App.js","reportWebVitals.js","mainpage.jsx","index.js"],"names":["SearchedMovies","this","props","searchedMovieList","map","searchedMovie","onNominate","currentIdList","id","Component","SearchedMovie","button","includes","length","DisabledButton","onClick","name","year","className","class","style","fontsize","type","disabled","NominatedMoives","nominationsList","nominatedMovie","onDelete","NominatedMovie","App","state","searchField","visited","url","addurl","customUrl","axios","get","then","response","newSearchedMovieList","i","data","Search","push","imdbID","Title","Year","setState","catch","error","console","log","alert","handleSubmit","event","preventDefault","handleChange","target","value","handleDelete","movieId","filter","c","local_currentIdList","JSON","stringify","local_nominationsList","localStorage","setItem","movie","getItem","localnominationsList","localcurrentIdList","thisnominationsList","parse","thiscurrentIdList","banner","color","fontWeight","Fragment","Form","onSubmit","Group","Label","Control","placeholder","onChange","Text","Button","variant","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6d4467a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Badge from \"react-bootstrap/Badge\";\n\n//class to map the claims\nclass SearchedMovies extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Search Results</h1>\n        {this.props.searchedMovieList.map((searchedMovie) => (\n          <SearchedMovie\n            key={searchedMovie.id}\n            onNominate={this.props.onNominate}\n            searchedMovie={searchedMovie}\n            currentIdList={this.props.currentIdList}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default SearchedMovies;\n\n//class for what an indivdual claim would look like\nclass SearchedMovie extends Component {\n  render() {\n    let button;\n    //this.props.nominationsList.includes(this.props.searchedMovie)\n    if (\n      this.props.currentIdList.includes(this.props.searchedMovie.id) ||\n      this.props.currentIdList.length >= 5\n    ) {\n      button = <DisabledButton />;\n    } else {\n      button = (\n        <button\n          onClick={() =>\n            this.props.onNominate(\n              this.props.searchedMovie.name,\n              this.props.searchedMovie.year,\n              this.props.searchedMovie.id\n            )\n          }\n          className=\"btn btn-success btn-sm m-2\"\n        >\n          Nominate\n        </button>\n      );\n    }\n    return (\n      <div class=\"d-flex justify-content-between\">\n        <div>\n          <span style={{ fontsize: 30 }}>\n            {this.props.searchedMovie.name} - {this.props.searchedMovie.year}\n          </span>\n        </div>\n\n        <div>{button}</div>\n      </div>\n    );\n  }\n}\n\nfunction ActiveButton(props) {\n  return (\n    <button\n      onClick={() =>\n        this.props.onNominate(\n          this.props.searchedMovie.name,\n          this.props.searchedMovie.year,\n          this.props.searchedMovie.id\n        )\n      }\n      className=\"btn btn-success btn-sm m-2\"\n    >\n      Nominate\n    </button>\n  );\n}\n\nfunction DisabledButton(props) {\n  return (\n    <button type=\"button\" class=\"btn btn-secondary btn-sm m-2\" disabled>\n      Nominate\n    </button>\n  );\n}\n","import React, { Component } from \"react\";\nimport Badge from \"react-bootstrap/Badge\";\n\n//class to map the claims\nclass NominatedMoives extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Nominations</h1>\n        {this.props.nominationsList.map((nominatedMovie) => (\n          <NominatedMovie\n            key={nominatedMovie.id}\n            onDelete={this.props.onDelete}\n            nominatedMovie={nominatedMovie}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default NominatedMoives;\n\n//class for what an indivdual claim would look like\nclass NominatedMovie extends Component {\n  render() {\n    return (\n      <div class=\"d-flex justify-content-between\">\n        <div>\n          <span style={{ fontsize: 30 }}>\n            {this.props.nominatedMovie.name} , {this.props.nominatedMovie.year},{\" \"}\n            {this.props.nominatedMovie.id}\n          </span>\n        </div>\n        <div>\n          <button\n            onClick={() => this.props.onDelete(this.props.nominatedMovie.id)}\n            className=\"btn btn-danger btn-sm m-2\"\n          >\n            Remove\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport SearchedMovies from \"./movies\";\nimport axios from \"axios\";\nimport Nominations from \"./nominations\";\n\n//component in charge of handling new items being added to the cart\nclass App extends Component {\n  state = {\n    searchedMovieList: [],\n    nominationsList: [],\n    currentIdList: [],\n    searchField: \"\",\n    visited: false,\n    url: \"https://www.omdbapi.com/?apikey=f7b87fd5&s=\",\n  };\n\n  //sends a API post request to local server retreive product name and price\n  addurl = (customUrl) => {\n    axios\n      .get(this.state.url + customUrl)\n      .then((response) => {\n        //fetched searched movie list and set it to current searchedmovielist\n        var newSearchedMovieList = [];\n        for (let i = 0; i < response.data.Search.length; i++) {\n          newSearchedMovieList.push({\n            id: response.data.Search[i].imdbID,\n            name: response.data.Search[i].Title,\n            year: response.data.Search[i].Year,\n          });\n        }\n        this.setState({ searchedMovieList: newSearchedMovieList });\n      })\n      .catch((error) => {\n        console.log(error);\n        alert(error);\n      });\n  };\n\n  handleSubmit = (event) => {\n    this.addurl(this.state.searchField);\n    event.preventDefault();\n    this.setState({\n      searchField: \"\",\n    });\n  };\n\n  handleChange = (event) => {\n    this.setState({ searchField: event.target.value });\n  };\n\n  handleDelete = (movieId) => {\n    //delete movie from current list of nominatations\n    var nominationsList = this.state.nominationsList.filter(\n      (c) => c.id !== movieId\n    );\n\n    //delete movie from current list of ids held\n    var currentIdList = this.state.currentIdList.filter((c) => c !== movieId);\n\n    var local_currentIdList = JSON.stringify(currentIdList);\n    var local_nominationsList = JSON.stringify(nominationsList);\n\n    localStorage.setItem(\"localcurrentIdList\", local_currentIdList);\n    localStorage.setItem(\"localnominationsList\", local_nominationsList);\n\n    this.setState({ currentIdList });\n    this.setState({ nominationsList });\n  };\n\n  onNominate = (movie, year, id) => {\n    //add nominations from searched movies to nominations list\n    this.state.nominationsList.push({\n      id: id,\n      name: movie,\n      year: year,\n    });\n\n    this.state.currentIdList.push(id);\n    var visited = this.state.currentIdList.length > 0;\n    localStorage.setItem(\"visited\", visited);\n    this.setState({\n      visited: visited,\n    });\n    var local_currentIdList = JSON.stringify(this.state.currentIdList);\n    var local_nominationsList = JSON.stringify(this.state.nominationsList);\n    localStorage.setItem(\"localcurrentIdList\", local_currentIdList);\n    localStorage.setItem(\"localnominationsList\", local_nominationsList);\n    this.setState({\n      nominationsList: this.state.nominationsList,\n    });\n    this.setState({ currentIdList: this.state.currentIdList });\n    this.setState({ visited: true });\n    console.log(\"ADDED\", this.state.nominationsList, this.state.currentIdList);\n  };\n\n  componentDidMount() {\n    const visited = localStorage.getItem(\"visited\") === \"true\";\n    if (visited) {\n      const localnominationsList = localStorage.getItem(\"localnominationsList\");\n      const localcurrentIdList = localStorage.getItem(\"localcurrentIdList\");\n      var thisnominationsList = JSON.parse(localnominationsList);\n      var thiscurrentIdList = JSON.parse(localcurrentIdList);\n      this.setState({\n        nominationsList: thisnominationsList,\n        currentIdList: thiscurrentIdList,\n      });\n      console.log(\n        \"REFRESH\",\n        this.state.nominationsList,\n        this.state.currentIdList\n      );\n    }\n  }\n\n  render() {\n    let banner;\n    if (this.state.currentIdList.length >= 5) {\n      banner = (\n        <div style={{ color: \"#11cbd7\" }}>\n          <h1\n            style={{ color: \"#fffff\", fontWeight: \"bold\" }}\n            className=\"text-center mt-2\"\n          >\n            You have finished Nominations!\n          </h1>\n        </div>\n      );\n    }\n\n    return (\n      // form to add item\n      <React.Fragment>\n        <h1 style={{ fontWeight: \"bold\" }} className=\"text-center mt-2\">\n          The Shoppies\n        </h1>\n        {banner}\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Label> Movie Title</Form.Label>\n            <Form.Control\n              type=\"\"\n              placeholder=\"Search for movie...\"\n              onChange={this.handleChange}\n              value={this.state.searchField}\n            />\n            <Form.Text className=\"text-muted\"></Form.Text>\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Search\n          </Button>\n        </Form>\n        <SearchedMovies\n          onNominate={this.onNominate}\n          searchedMovieList={this.state.searchedMovieList}\n          currentIdList={this.state.currentIdList}\n        />\n        <Nominations\n          onDelete={this.handleDelete}\n          nominationsList={this.state.nominationsList}\n        />\n        {/* <p>WOAH{this.state.nominationsList} </p> */}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\n\n//component in charge of handling new items being added to the cart\nclass MainPage extends Component {\n  state = {\n    productslist: [],\n    urls: [],\n  };\n\n  render() {\n    return (\n      // form to add item\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label> Movie Title</Form.Label>\n          <Form.Control type=\"\" placeholder=\"Search for movie...\" />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Search\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default MainPage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport MainPage from \"./mainpage\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}